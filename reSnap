#! /usr/bin/env bash
# needs nix-shell -i bash -p ffmpeg lz4 wl-clipboard

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# Author        : Evan Widloski <evan@evanw.org>, Patrick Pedersen <ctx.xda@gmail.com>
#                 Robbert Gurdeep Singh <git@beardhatcode.be>,
#                 Rien Maertens <rien.maertens@posteo.be>
#
# Description   : Host sided script for screenshotting the current reMarkable display
#
# Dependencies  : FFmpeg, ssh
#
# Thanks to https://github.com/canselcik/libremarkable/wiki/Framebuffer-Overview

# Current version (MAJOR.MINOR)
VERSION="1.0"

# Usage
function usage() {
	echo "Usage: resnap.sh [-h | --help] [-v | --version] [-r ssh_address] [output_jpg]"
	echo
	echo "Arguments:"
	echo -e "output_jpg\tFile to save screenshot to (default resnap.jpg)"
	echo -e "-v --version\tDisplay version and exit"
	echo -e "-i\t\tpath to ssh pubkey"
	echo -e "-r\t\tAddress of reMarkable (default 10.11.99.1)"
	echo -e "-h --help\tDisplay usage and exit"
	echo
}

# default ssh address
ADDRESS=${REMARKABLE_LOC:-root@10.11.99.1}

# default output file
OUTPUT="$(date +/tmp/remarkable-%Y%m%d-%H%M%S.png)"

PARAMS=""
while (("$#")); do
	case "$1" in
	-r)
		ADDRESS=$2
		shift 2
		;;
	-i)
		SSH_OPT="-i $2"
		shift 2
		;;
	-h | --help)
		shift 1
		usage
		exit 1
		;;
	--) # end argument parsing
		shift
		break
		;;
	-* | --*=) # unsupported flags
		echo "resnap: Error: Unsupported flag $1" >&2
		usage
		exit 1
		;;
	*) # preserve positional arguments
		OUTPUT=$1
		shift
		;;
	esac
done

# Check if output file already exists
if [ -f $OUTPUT ]; then
	extension=$([[ "$OUTPUT" = *.* ]] && echo ".${OUTPUT##*.}" || echo '')
	filename="${OUTPUT%.*}"
	index="$(ls "$filename"*"$extension" | grep -P "$filename(-[0-9]*)?$extension" | wc -l)"
	OUTPUT="$filename-$index$extension"
fi

fallback_to_gzip() {
	echo "Falling back to gzip, your experience may not be optimal."
	echo "Go to https://github.com/rien/reStream/#sub-second-latency for a better experience."
	compress="gzip"
	decompress="gzip -d"
	sleep 2
}

# check if lz4 is present on remarkable
if ssh "root@$ADDRESS" "[ -f /opt/bin/lz4 ]"; then
	compress="/opt/bin/lz4"
elif ssh "root@$ADDRESS" "[ -f ~/lz4 ]"; then
	compress="~/lz4"
fi

# gracefully degrade to gzip if is not present on remarkable or host
if [ -z "$compress" ]; then
	echo "Your remarkable does not have lz4."
	fallback_to_gzip
else
	decompress="lz4 -d"
fi

# grab framebuffer from reMarkable
ssh root@$ADDRESS $SSH_OPT "cat /dev/fb0 | $compress " |
	$decompress |
	ffmpeg -vcodec rawvideo \
		-loglevel panic \
		-f rawvideo \
		-pix_fmt gray16le \
		-s 1408,1872 \
		-i - \
		-vframes 1 \
		-f image2 \
		-vcodec png - |
	convert PNG:- -scale '75%' PNG8:"$OUTPUT"

    # Send to clipboard if not run from terminal
    if ps -otty= $PPID | grep -q '^?$'
    then
        wl-copy -t image/png < "$OUTPUT"
        notify-send "Remarkable coppied to clipboard";
    fi

if [ ! -f "$OUTPUT" ]; then
	echo "resnap: Error: Failed to capture screenshot"
	exit 1
fi
echo "$OUTPUT"
